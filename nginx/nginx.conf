events {}

http {

    upstream profile-service {
        server host.docker.internal:8081;
    }

    upstream user-service {
        server host.docker.internal:8082;
    }

    upstream block-service {
        server host.docker.internal:8083;
    }

    upstream id-generation-service {
        server host.docker.internal:8084;
    }

    server {
        listen 9999;

        server_name ziplink;

        location /profile {
            proxy_pass http://profile-service;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /user {
            proxy_pass http://user-service;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /block {
            proxy_pass http://block-service;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /idGeneration {
            proxy_pass http://id-generation-service;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            return 200 'Hello, Nginx is working!';
            add_header Content-Type text/plain;
        }
    }
}
